{"version":3,"file":"static/js/209.f52a5c5a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesSearch/movie-search.module.css?b15d","components/MoviesSearch/MovieSearch.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/Pages/MoviesPage/movies-page.module.css?5913","Pages/MoviesPage/MoviesPage.jsx","api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"group\":\"movie-search_group__jCj74\",\"label\":\"movie-search_label__zJBt7\",\"input\":\"movie-search_input__huzMw\",\"btn\":\"movie-search_btn__MX6y6\"};","import { useState, useEffect, useMemo, useRef } from 'react';\nimport { getSearchMovies } from 'api/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\n\nimport styles from './movie-search.module.css';\n\nconst MovieSearch = ({ onSubmit }) => {\n  // const [search, setSearch] = useState('');\n  const [results, setResults] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n    setResults(search);\n  }, [search]);\n\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    // setSearch(value);\n    setSearchParams({ search: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setResults(search);\n    // setSearchParams({ search });\n    // setSearch('');\n    // e.target.reset();\n    inputRef.current.value = '';\n  };\n\n  useEffect(() => {\n    if (!results) return;\n\n    const getMoviesList = async () => {\n      try {\n        const { data } = await getSearchMovies(results);\n        onSubmit(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMoviesList();\n  }, [results, onSubmit]);\n  const searchId = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      {loading && <p>...Loading</p>}\n      {error && <p>Error: {error}</p>}\n\n      <form className={styles.group} onSubmit={handleSubmit}>\n        <label htmlFor={searchId} className={styles.label}>\n          Let's find movies{' '}\n        </label>\n        <input\n          className={styles.input}\n          id={searchId}\n          ref={inputRef}\n          name=\"search\"\n          value={search}\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n          required\n        />\n        <button className={styles.btn} type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"movies-page_text__mQWJV\",\"back\":\"movies-page_back__2esa2\",\"title\":\"movies-page_title__Ss7Ij\",\"list\":\"movies-page_list__yMELz\",\"item\":\"movies-page_item__9jXPv\"};","import MovieSearch from 'components/MoviesSearch/MovieSearch';\nimport styles from './movies-page.module.css';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [itemMovie, setItemMovie] = useState([]);\n  \n\n  const renderMovieList = () => {\n    return itemMovie.map(({ title, id }) => {\n      return (\n        <li className={styles.item} key={id}>\n          <NavLink className={styles.title} to={`${id}`}>{title}</NavLink>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <MovieSearch onSubmit={setItemMovie} />\n      <ol className={styles.list}>\n        {itemMovie.length\n          ? renderMovieList()\n          : null}\n      </ol>\n      \n    </div>\n  );\n};\nexport default MoviesPage;\n","\nimport axios from 'axios';\n\nconst API_KEY = 'a5e80a241b45048d42e42bcf67dfe2f1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: `${BASE_URL}`,\n  params: {\n    api_key: `${API_KEY}`,\n  },\n});\n\n\nexport const getTrendingMovies = () => {\n  return instance.get('trending/movie/day');\n};\n\n\nexport const getMoviesById = async id => {\n  const movies = instance.get(`movie/${id}?language=en-US`);\n  return movies;\n};\n\n\nexport const getSearchMovies = async search => {\n  const movies = instance.get(\n    `search/movie?include_adult=false&language=en-US&page=1&query=${search}`\n  );\n  return movies;\n};\n\n\nexport const getMovieCredits = async id => {\n  const movies = instance.get(`movie/${id}/credits?language=en-US`);\n  return movies;\n};\n\n\nexport const getMovieReviews = async id => {\n  const movies = instance.get(`movie/${id}/reviews?language=en-US&page=1`);\n  return movies;\n};\n"],"names":["_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","results","setResults","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","search","get","inputRef","useRef","useEffect","current","focus","getMoviesList","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getSearchMovie","data","_context","prev","next","getSearchMovies","sent","t0","message","finish","stop","apply","arguments","searchId","useMemo","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","_jsxs","children","_jsx","className","styles","e","preventDefault","value","htmlFor","ref","name","onChange","_ref2","target","type","autoComplete","autoFocus","placeholder","required","itemMovie","setItemMovie","MovieSearch","map","title","NavLink","to","concat","instance","axios","baseURL","params","api_key","getTrendingMovies","getMoviesById","movies","abrupt","_x","_callee2","_context2","_x2","getMovieCredits","_callee3","_context3","_x3","getMovieReviews","_ref4","_callee4","_context4","_x4"],"sourceRoot":""}