{"version":3,"file":"static/js/209.7645900b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesSearch/movie-search.module.css?b15d","components/MoviesSearch/MovieSearch.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/Pages/MoviesPage/movies-page.module.css?5913","Pages/MoviesPage/MoviesPage.jsx","api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"movie-search_formGroup__CZ7oy\",\"group\":\"movie-search_group__jCj74\",\"label\":\"movie-search_label__zJBt7\",\"input\":\"movie-search_input__huzMw\",\"btn\":\"movie-search_btn__MX6y6\"};","\nimport { useState, useEffect, useMemo } from 'react';\nimport { getSearchMovies } from 'api/api';\nimport { useSearchParams } from 'react-router-dom';\nimport styles from './movie-search.module.css';\nimport { nanoid } from 'nanoid';\n\nconst MovieSearch = ({ setItemMovie }) => {\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState('');\n  const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n    // const search = searchParams.get('search');\n    const page = searchParams.get('page');\n\n    const searchMovie = searchParams.get(\"search\");\n    console.log('searchMovie', searchMovie);\n    \n  const handleChange = ({ target }) => {\n    const { value } = target;\n      setSearch(value);\n      setSearchParams({search:value})\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n      setResults(search);\n      setSearchParams({ search, page });\n      setSearch('');\n  };\n\n  useEffect(() => {\n    if (!results) return;\n\n    const getMoviesList = async () => {\n      try {\n        const { data } = await getSearchMovies(results);\n        setItemMovie(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMoviesList();\n  }, [results, setItemMovie]);\n  const searchId = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      {loading && <p>...Loading</p>}\n      {error && <p>Error: {error}</p>}\n      <form className={styles.group} onSubmit={handleSubmit}>\n        <label htmlFor={searchId} className={styles.label}>\n          Let's find movies{' '}\n        </label>\n        <input\n          className={styles.input}\n          id={searchId}\n          name=\"search\"\n          value={search}\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search\"\n          required\n        />\n        <button className={styles.btn} type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"movies-page_text__mQWJV\",\"back\":\"movies-page_back__2esa2\",\"title\":\"movies-page_title__Ss7Ij\",\"list\":\"movies-page_list__yMELz\",\"item\":\"movies-page_item__9jXPv\"};","import MovieSearch from 'components/MoviesSearch/MovieSearch';\nimport styles from './movies-page.module.css';\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [itemMovie, setItemMovie] = useState([]);\n  \n\n  const renderMovieList = () => {\n    return itemMovie.map(({ title, id }) => {\n      return (\n        <li className={styles.item} key={id}>\n          <NavLink className={styles.title} to={`${id}`}>{title}</NavLink>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.wrap}>\n      <MovieSearch setItemMovie={setItemMovie} />\n      <ol className={styles.list}>\n        {itemMovie.length\n          ? renderMovieList()\n          : null}\n      </ol>\n      \n    </div>\n  );\n};\nexport default MoviesPage;\n","\nimport axios from 'axios';\n\nconst API_KEY = 'a5e80a241b45048d42e42bcf67dfe2f1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL: `${BASE_URL}`,\n  params: {\n    api_key: `${API_KEY}`,\n  },\n});\n\n\nexport const getTrendingMovies = () => {\n  return instance.get('trending/movie/day');\n};\n\n\nexport const getMoviesById = async id => {\n  const movies = instance.get(`movie/${id}?language=en-US`);\n  return movies;\n};\n\n\nexport const getSearchMovies = async search => {\n  const movies = instance.get(\n    `search/movie?include_adult=false&language=en-US&page=1&query=${search}`\n  );\n  return movies;\n};\n\n\nexport const getMovieCredits = async id => {\n  const movies = instance.get(`movie/${id}/credits?language=en-US`);\n  return movies;\n};\n\n\nexport const getMovieReviews = async id => {\n  const movies = instance.get(`movie/${id}/reviews?language=en-US&page=1`);\n  return movies;\n};\n"],"names":["_ref","setItemMovie","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useState3","_useState4","results","setResults","_useState5","_useState6","error","setError","_useState7","_useState8","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","page","get","searchMovie","console","log","useEffect","getMoviesList","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getSearchMovie","data","_context","prev","next","getSearchMovies","sent","t0","message","finish","stop","apply","arguments","searchId","useMemo","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","_jsxs","children","_jsx","className","styles","onSubmit","e","preventDefault","htmlFor","name","value","onChange","_ref2","target","type","autoComplete","autoFocus","placeholder","required","itemMovie","MovieSearch","map","title","NavLink","to","concat","instance","axios","baseURL","params","api_key","getTrendingMovies","getMoviesById","movies","abrupt","_x","_callee2","_context2","_x2","getMovieCredits","_callee3","_context3","_x3","getMovieReviews","_ref4","_callee4","_context4","_x4"],"sourceRoot":""}